<?xml version="1.0" encoding="UTF-8"?><testrun name="FetchJeepTest" project="jeep-sales" tests="2" started="2" failures="0" errors="1" ignored="1">
  <testsuite name="com.promineotech.jeep.controller.FetchJeepTest" time="2.694" displayname="FetchJeepTest" uniqueid="[engine:junit-jupiter]/[class:com.promineotech.jeep.controller.FetchJeepTest]">
    <testcase name="testThatJeepsAreReturnedWhenAValidModelAndTrimAreSupplied" classname="com.promineotech.jeep.controller.FetchJeepTest" time="0.0" ignored="true" displayname="testThatJeepsAreReturnedWhenAValidModelAndTrimAreSupplied()" uniqueid="[engine:junit-jupiter]/[class:com.promineotech.jeep.controller.FetchJeepTest]/[method:testThatJeepsAreReturnedWhenAValidModelAndTrimAreSupplied()]"/>
    <testcase name="testDb" classname="com.promineotech.jeep.controller.FetchJeepTest" time="2.694" displayname="testDb()" uniqueid="[engine:junit-jupiter]/[class:com.promineotech.jeep.controller.FetchJeepTest]/[method:testDb()]">
      <error>org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of class path resource [flyway/migrations/V1.0__Jeep_Schema.sql]: CREATE TABLE customers ( customer_pk int unsigned NOT NULL AUTO_INCREMENT, customer_id varchar(40) NOT NULL, first_name varchar(45) NOT NULL, last_name varchar(45) NOT NULL, phone varchar(20), PRIMARY KEY (customer_pk) ); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE customers ( customer_pk int [*]unsigned NOT NULL AUTO_INCREMENT, customer_id varchar(40) NOT NULL, first_name varchar(45) NOT NULL, last_name varchar(45) NOT NULL, phone varchar(20), PRIMARY KEY (customer_pk) )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, NULL, AS, DEFAULT, GENERATED, ON UPDATE, NOT NULL, NULL, AUTO_INCREMENT, DEFAULT ON NULL, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE customers ( customer_pk int unsigned NOT NULL AUTO_INCREMENT, customer_id varchar(40) NOT NULL, first_name varchar(45) NOT NULL, last_name varchar(45) NOT NULL, phone varchar(20), PRIMARY KEY (customer_pk) ) [42001-214]&#13;
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)&#13;
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)&#13;
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)&#13;
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.execute(ResourceDatabasePopulator.java:269)&#13;
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$4(SqlScriptsTestExecutionListener.java:279)&#13;
	at org.springframework.transaction.support.TransactionOperations.lambda$executeWithoutResult$0(TransactionOperations.java:68)&#13;
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)&#13;
	at org.springframework.transaction.support.TransactionOperations.executeWithoutResult(TransactionOperations.java:67)&#13;
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:279)&#13;
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.lambda$executeSqlScripts$0(SqlScriptsTestExecutionListener.java:201)&#13;
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)&#13;
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:201)&#13;
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.executeSqlScripts(SqlScriptsTestExecutionListener.java:148)&#13;
	at org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener.beforeTestMethod(SqlScriptsTestExecutionListener.java:118)&#13;
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:293)&#13;
	at org.springframework.test.context.junit.jupiter.SpringExtension.beforeEach(SpringExtension.java:174)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$2(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:199)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:199)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:162)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:129)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)&#13;
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)&#13;
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)&#13;
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE customers ( customer_pk int [*]unsigned NOT NULL AUTO_INCREMENT, customer_id varchar(40) NOT NULL, first_name varchar(45) NOT NULL, last_name varchar(45) NOT NULL, phone varchar(20), PRIMARY KEY (customer_pk) )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, NULL, AS, DEFAULT, GENERATED, ON UPDATE, NOT NULL, NULL, AUTO_INCREMENT, DEFAULT ON NULL, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE customers ( customer_pk int unsigned NOT NULL AUTO_INCREMENT, customer_id varchar(40) NOT NULL, first_name varchar(45) NOT NULL, last_name varchar(45) NOT NULL, phone varchar(20), PRIMARY KEY (customer_pk) ) [42001-214]&#13;
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)&#13;
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)&#13;
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)&#13;
	at org.h2.command.Parser.getSyntaxError(Parser.java:900)&#13;
	at org.h2.command.Parser.read(Parser.java:5675)&#13;
	at org.h2.command.Parser.readIfMore(Parser.java:1268)&#13;
	at org.h2.command.Parser.parseCreateTable(Parser.java:9272)&#13;
	at org.h2.command.Parser.parseCreate(Parser.java:6784)&#13;
	at org.h2.command.Parser.parsePrepared(Parser.java:763)&#13;
	at org.h2.command.Parser.parse(Parser.java:689)&#13;
	at org.h2.command.Parser.parse(Parser.java:666)&#13;
	at org.h2.command.Parser.prepareCommand(Parser.java:569)&#13;
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)&#13;
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)&#13;
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)&#13;
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)&#13;
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)&#13;
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)&#13;
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)&#13;
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)&#13;
	... 68 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
